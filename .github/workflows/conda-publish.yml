name: "Conda Upload"

on:
  release:
    types: [created]
    branches:
      - master

jobs:
  conda-upload-ubuntu:
    name: Ubuntu Conda Upload
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: 'false'
      - name: Checkout submodules
        shell: bash -l {0}
        run: |
          git submodule update --init --recursive
      - name: Bash
        shell: bash -l {0}
        run: |
          eval "$($CONDA/condabin/conda shell.bash hook)"
          conda create --name btest
          conda activate btest
          conda install conda-build conda-verify anaconda-client
          conda config --set anaconda_upload yes
          conda build --channel specpose --token ${{ secrets.ANACONDA_TOKEN }} .

  conda-upload-mac:
    name: Mac Conda Upload
    runs-on: 'macos-latest'
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: 'false'
      - name: Checkout submodules
        shell: zsh -l {0}
        run: |
          git submodule update --init --recursive
      - name: Zsh
        shell: zsh -l {0}
        run: |
          echo `ls -alF /usr/bin/gcc`
          echo `clang --version`
          echo "Activating conda version 4.8.x"
          sudo chown -R 501:20 /usr/local/miniconda
          eval "$($CONDA/condabin/conda shell.zsh hook)"
          conda create --name btest
          conda activate btest
          conda install conda-build conda-verify anaconda-client
          conda config --set anaconda_upload yes
          conda build --channel specpose --token ${{ secrets.ANACONDA_TOKEN }} .

  conda-upload-win:
    name: Windows Conda Upload
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: 'false'
      - name: Checkout submodules
        shell: powershell
        run: |
          git submodule update --init --recursive
      - name: PowerShell
        shell: powershell
        run: |
          $ErrorActionPreference = 'Continue'
          echo $ErrorActionPreference
          Get-ExecutionPolicy
          Set-ExecutionPolicy -Scope CurrentUser RemoteSigned
          Get-ExecutionPolicy
          echo "Activating conda version 4.6.x"
          (& $env:CONDA"\Scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
          conda create --name btest
          conda activate btest
          conda install conda-build conda-verify anaconda-client
          Remove-Item "C:\Program Files (x86)\Windows Kits\10\\include\wdf" -Recurse -Force -ErrorAction SilentlyContinue
          conda config --set anaconda_upload yes
          conda build --channel specpose --token ${{ secrets.ANACONDA_TOKEN }} .
